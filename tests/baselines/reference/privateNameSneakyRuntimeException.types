=== tests/cases/conformance/classes/members/privateNames/privateNameSneakyRuntimeException.ts ===
// @target es6

function createClass () {
>createClass : () => typeof (Anonymous class)

    return class {
>class {        #foo = 3;        equals(other: any) {            return this.#foo = other.#foo;        }    } : typeof (Anonymous class)

        #foo = 3;
>#foo : number
>3 : 3

        equals(other: any) {
>equals : (other: any) => any
>other : any

            return this.#foo = other.#foo;
>this.#foo = other.#foo : any
>this.#foo : number
>this : this
>other.#foo : any
>other : any
        }
    };
}

const a = new (createClass())();
>a : (Anonymous class)
>new (createClass())() : (Anonymous class)
>(createClass()) : typeof (Anonymous class)
>createClass() : typeof (Anonymous class)
>createClass : () => typeof (Anonymous class)

const b = new (createClass())();
>b : (Anonymous class)
>new (createClass())() : (Anonymous class)
>(createClass()) : typeof (Anonymous class)
>createClass() : typeof (Anonymous class)
>createClass : () => typeof (Anonymous class)

console.log(a.equals(b));     // OK at compile time but will be a runtime error
>console.log(a.equals(b)) : void
>console.log : (message?: any, ...optionalParams: any[]) => void
>console : Console
>log : (message?: any, ...optionalParams: any[]) => void
>a.equals(b) : any
>a.equals : (other: any) => any
>a : (Anonymous class)
>equals : (other: any) => any
>b : (Anonymous class)

