=== tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticFields.ts ===
// @target es6

class A {
>A : Symbol(A, Decl(privateNamesAndStaticFields.ts, 0, 0))

    static #foo: number;
>#foo : Symbol(A.#foo, Decl(privateNamesAndStaticFields.ts, 2, 9))

    constructor () {
        A.#foo = 3;
>A.#foo : Symbol(A.#foo, Decl(privateNamesAndStaticFields.ts, 2, 9))
>A : Symbol(A, Decl(privateNamesAndStaticFields.ts, 0, 0))
    }
}

class B extends A {
>B : Symbol(B, Decl(privateNamesAndStaticFields.ts, 7, 1))
>A : Symbol(A, Decl(privateNamesAndStaticFields.ts, 0, 0))

    static #foo: string;
>#foo : Symbol(B.#foo, Decl(privateNamesAndStaticFields.ts, 9, 19))

    constructor () {
        super();
>super : Symbol(A, Decl(privateNamesAndStaticFields.ts, 0, 0))

        B.#foo = "some string";
>B.#foo : Symbol(B.#foo, Decl(privateNamesAndStaticFields.ts, 9, 19))
>B : Symbol(B, Decl(privateNamesAndStaticFields.ts, 7, 1))
    }
}

